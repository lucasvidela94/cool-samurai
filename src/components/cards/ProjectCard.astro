---
interface Props {
    title: string;
    description: string;
    imageUrl: string;
    projectUrl: string;
    tags: string[];
}
const { title, description, imageUrl, projectUrl, tags } = Astro.props;
---

<div class="project-card">
    <div class="project-card-image">
        <img src={imageUrl} alt={title} />
    </div>
    <div class="project-card-content">
        <h3 class="project-title">
            <a href={projectUrl}>
                {title}
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                >
                    <line x1="7" y1="17" x2="17" y2="7"></line>
                    <polyline points="7 7 17 7 17 17"></polyline>
                </svg>
            </a>
        </h3>
        <p class="project-description">{description}</p>
        {
            tags && (
                <div class="project-tags">
                    {tags.map((tag) => (
                        <span class="tag">{tag}</span>
                    ))}
                </div>
            )
        }
    </div>
</div>

<style>
    .project-card {
        display: grid;
        grid-template-columns: 1fr;
        grid-template-areas:
            "image"
            "content";
        align-items: center;
        gap: 1.5rem;
        overflow: hidden;
        margin-bottom: 1.5rem;
        padding: 1.5rem;
        border-radius: 12px;
        transition:
            transform 0.2s ease,
            box-shadow 0.2s ease;
        background: #24263b;
        box-shadow:
            0 3px 4px rgba(0, 0, 0, 0.1),
            0 1px 2px rgba(0, 0, 0, 0.08);
        max-width: 700px;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    .project-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);
    }
    .project-card-image {
        grid-area: image;
        width: 100%;
        max-height: 200px;
        overflow: hidden;
        border-radius: 8px;
    }
    .project-card-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 8px;
    }
    .project-card-content {
        grid-area: content;
        padding: 1rem 0;
    }
    .project-title {
        margin: 0 0 0.5rem 0;
    }
    .project-title a {
        display: inline-flex;
        align-items: center;
        color: #e2e8f0;
        font-size: 1.5rem;
        font-weight: 700;
        text-decoration: none;
    }
    .project-title svg {
        margin-left: 0.4rem;
        color: #38bdf8;
    }
    .project-description {
        color: #94a3b8;
        font-size: 0.875rem;
        line-height: 1.4;
        margin-bottom: 1rem;
    }
    .project-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    .tag {
        background-color: rgba(56, 189, 248, 0.1);
        color: #38bdf8;
        font-size: 0.75rem;
        font-weight: 500;
        padding: 0.25rem 0.5rem;
        border-radius: 9999px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    @media (min-width: 768px) {
        .project-card {
            grid-template-columns: 1fr 1fr;
            grid-template-areas: "image content";
        }
        .project-card-image {
            max-height: none;
        }
        .project-card-content {
            padding-left: 1.5rem;
            border-left: 1px solid rgba(148, 163, 184, 0.2);
        }
    }
</style>
